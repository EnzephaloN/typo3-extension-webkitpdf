<?php
namespace Tx\Webkitpdf\Generator;

/***************************************************************
 *  Copyright notice
 *
 *  (c) 2009 Dev-Team Typoheads <dev@typoheads.at>
 *  All rights reserved
 *
 *  This script is part of the TYPO3 project. The TYPO3 project is
 *  free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  The GNU General Public License can be found at
 *  http://www.gnu.org/copyleft/gpl.html.
 *
 *  This script is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  This copyright notice MUST APPEAR in all copies of the script!
 ***************************************************************/

use Tx\Webkitpdf\Utility\PdfUtility;
use TYPO3\CMS\Core\Utility\ArrayUtility;
use TYPO3\CMS\Core\Utility\GeneralUtility;

/**
 * Interface for PDF generators.
 */
abstract class AbstractPdfGenerator implements PdfGeneratorInterface {

	/**
	 * Options that override / enhance the default options.
	 *
	 * @var array
	 */
	protected $customOptions = array();

	/**
	 * These options will be passed by default to the wkhtmltopdf script.
	 *
	 * @var array
	 */
	protected $defaultOptions = array(
		'footer-right' => '[page]/[toPage]',
		'footer-font-size' => '6',
		'header-font-size' => '6',
		'margin-left' => '15mm',
		'margin-right' => '15mm',
		'margin-top' => '15mm',
		'margin-bottom' => '15mm',
	);

	/**
	 * Specific options for the different PDF generators.
	 *
	 * @var array
	 */
	protected $generatorOptions = array();

	/**
	 * If TRUE debug output will be generated by the PDF generator.
	 *
	 * @var bool
	 */
	protected $isDebugEnabled = FALSE;

	/**
	 * @var PdfUtility
	 */
	protected $pdfUtility;

	/**
	 * Path to the webkit executable.
	 *
	 * @var string
	 */
	protected $webkitExecutable = '/usr/bin/wkthmltopdf';

	/**
	 * Dispatches the PDF generation in the concrete PDF generator.
	 *
	 * @param string $scriptCall
	 * @return void
	 */
	abstract protected function dispatchPdfGeneration($scriptCall);

	/**
	 * Initializes the PDF utility.
	 */
	public function __construct() {
		$this->pdfUtility = GeneralUtility::makeInstance(PdfUtility::class);
	}

	/**
	 * Dispatches the PDF generation.
	 *
	 * @param array $urls The URLs that should be read for PDF generation.
	 * @param string $fileName Absolute filename to wich the generated PDF should be written.
	 * @return void
	 */
	public function generatePdf(array $urls, $fileName) {

		$scriptCall = $this->webkitExecutable . ' ' .
			$this->buildScriptOptions() . ' ' .
			$this->getUrlsParameter($urls) . ' ' .
			escapeshellarg($fileName);

		$this->dispatchPdfGeneration($scriptCall);
	}

	/**
	 * Sets options for the PDF generator.
	 *
	 * @param array $options
	 * @return void
	 */
	public function setGeneratorOptions(array $options) {
		ArrayUtility::mergeRecursiveWithOverrule($this->generatorOptions, $options);
	}

	/**
	 * Enables or disables debugging in the PDF generator.
	 *
	 * @param bool $isDebugEnabled
	 */
	public function setIsDebugEnabled($isDebugEnabled) {
		$this->isDebugEnabled = $isDebugEnabled;
	}

	/**
	 * @param string $option
	 * @param string $value
	 */
	public function setOption($option, $value) {
		$this->customOptions[$option] = $value;
	}

	/**
	 * Sets the path to the wkhtmltopdf executable.
	 *
	 * @param string $webkitExecutable
	 */
	public function setWebkitExecutablePath($webkitExecutable) {
		$this->webkitExecutable = $webkitExecutable;
	}

	/**
	 * Builds a string with the options that are passed to the wkthmltopdf script.
	 *
	 * @return string
	 */
	protected function buildScriptOptions() {

		$options = $this->defaultOptions;
		ArrayUtility::mergeRecursiveWithOverrule($options, $this->customOptions);

		$optionString = '';

		foreach ($options as $optionName => $optionValue) {

			$optionString .= ' --' . $optionName;

			if (!empty($optionValue)) {
				$optionString .= ' ' . escapeshellarg($optionValue);
			}
		}

		return trim($optionString);
	}

	/**
	 * Builds the URLs parameter that is passed to wkthmltopdf.
	 *
	 * @param array $urls
	 * @return string
	 */
	protected function getUrlsParameter(array $urls) {

		array_walk($urls, function (&$url) {
			$url = escapeshellarg($url);
		});

		return implode(' ', $urls);
	}
}